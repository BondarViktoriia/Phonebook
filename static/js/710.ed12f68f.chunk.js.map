{"version":3,"file":"static/js/710.ed12f68f.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","redux/selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.styled.jsx","components/Filter/Filter.js","components/pages/PhonebookForm/PhonebookForm.styled.jsx","components/ContactList/ContactList.styled.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/pages/PhonebookForm/PhonebookForm.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  border: 5px solid rgb(94, 84, 57);\n  border-radius: 4px;\n\n  width: 400px;\n  height: 275px;\n\n  background-color: rgb(225, 234, 235);\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  text-transform: uppercase;\n  font-weight: bold;\n  line-height: 2;\n  font-size: 20px;\n  color: rgb(94, 84, 57);\n  margin-bottom: 30px;\n`;\n\nexport const Input = styled.input`\n  width: 250px;\n  height: 25px;\n  color: rgb(94, 84, 57);\n  background-color: rgb(225, 234, 235);\n  border: 2px solid rgb(94, 84, 57);\n  margin-left: 73px;\n`;\nexport const ButtonAdd = styled.button`\n  width: 110px;\n  height: 45px;\n  text-transform: uppercase;\n  background: rgb(19, 212, 44);\n  background: radial-gradient(\n    circle,\n    rgba(19, 212, 44, 1) 22%,\n    rgba(38, 38, 39, 1) 76%\n  );\n  color: #fff;\n  border-radius: 8px;\n  border: none;\n`;\n","\nimport { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\n\nexport const selectVisibleContacts = createSelector(\n[selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizeFilter = filter.trim().toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.trim().toLowerCase().includes(normalizeFilter)\n    );\n  }\n);","import { useState } from 'react';\nimport { Form, Label, Input, ButtonAdd } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/operations';\nimport { selectContacts } from 'redux/selectors';\nimport Notiflix from 'notiflix';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        throw new Error(\"There isn't such option\");\n    }\n  };\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const isNameAdded = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    const isNumberAdded = contacts.some(contact => contact.number === number);\n\n    if (isNameAdded) {\n      Notiflix.Notify.failure(`${name} is alredy in contacts`);\n      return;\n    } else if (isNumberAdded) {\n      Notiflix.Notify.failure(`${number} is alredy in contacts`);\n      return;\n    }\n\n    const newContact = addContact({ name, number });\n\n    dispatch(newContact);\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n        />\n      </Label>\n\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n        />\n      </Label>\n\n      <ButtonAdd type=\"submit\">Add contact</ButtonAdd>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  text-transform: uppercase;\n  font-weight: bold;\n  line-height: 2;\n  font-size: 20px;\n  color: rgb(94, 84, 57);\n  margin-bottom: 30px;\n`;\n\nexport const FilterInput = styled.input`\n  width: 250px;\n  height: 25px;\n  color: rgb(94, 84, 57);\n  background-color: rgb(225, 234, 235);\n  border: 2px solid rgb(94, 84, 57);\n  margin: auto;\n`;\n","import { FilterLabel, FilterInput } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterByName } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleFilterChange = e => {\n    dispatch(filterByName(e.target.value));\n  };\n  return (\n    <FilterLabel>\n      Find contacts by name\n      <FilterInput type=\"text\" value={filter} onChange={handleFilterChange} />\n    </FilterLabel>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const PhonebookContainer = styled.div`\n  justify-content: center;\n  text-align: center;\n`;\n\nexport const PhoneBook = styled.h1`\n  color: rgb(250, 184, 2);\n  font-size: 50px;\n  margin: 0;\n  margin-bottom: 20px;\n  text-transform: uppercase;\n`;\n\nexport const ContactsTitle = styled.h2`\n  color: rgb(250, 184, 2);\n  font-size: 35px;\n  margin: 0;\n  margin-bottom: 20px;\n  text-transform: uppercase;\n`;\n\nexport const EmptyPhonebook = styled.div`\n  color: rgb(94, 84, 57);\n  font-size: 35px;\n  margin: 0;\n  margin-bottom: 20px;\n  text-transform: uppercase;\n`;\nexport const Container = styled.div`\n  display: flex;\n  margin-top: 30px;\n`;\n","import styled from 'styled-components';\n\nexport const ContactContainer = styled.ul`\n  width: 455px;\n  height: 275px;\n  margin: auto;\n  margin-bottom: 20px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  border: 2px solid rgb(94, 84, 57);\n  justify-content: space-between;\n  padding: 0px 15px;\n`;\n","import styled from 'styled-components';\n\nexport const Contact = styled.p`\n  margin: 0;\n  padding: 15px;\n  font-size: 20px;\n  color: rgb(225, 234, 235);\n`;\nexport const ButtonDelete = styled.button`\n  width: 75px;\n  height: 25px;\n  text-align: center;\n  justify-content: center;\n  background: rgb(19, 212, 44);\n  background: radial-gradient(\n    circle,\n    rgba(19, 212, 44, 1) 22%,\n    rgba(38, 38, 39, 1) 76%\n  );\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  color: #fff;\n`;\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\nimport { Contact, ButtonDelete } from './ContactItem.styled';\nimport PropTypes from 'prop-types';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n  return (\n    <>\n      <Contact>\n        {name}: {number}\n      </Contact>\n      <ButtonDelete onClick={handleDelete}>Delete</ButtonDelete>\n    </>\n  );\n};\nexport default ContactItem;\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { ListItem, ContactContainer } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/selectors';\nimport ContactItem from 'components/ContactItem/ContactItem';\n\nconst ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ContactContainer>\n      {visibleContacts.map(({ id, name, number }) => (\n        <ListItem key={id}>\n          <ContactItem id={id} name={name} number={number} />\n        </ListItem>\n      ))}\n    </ContactContainer>\n  );\n};\n\nexport default ContactList;\n","import ContactForm from '../../ContactForm';\nimport Filter from '../../Filter';\nimport {\n  PhoneBook,\n  PhonebookContainer,\n  ContactsTitle,\n  EmptyPhonebook,\n  Container,\n} from './PhonebookForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/operations';\nimport {\n  selectContacts,\n  selectError,\n  selectFilter,\n  selectIsLoading,\n} from 'redux/selectors';\nimport ContactList from '../../ContactList';\n\nexport const PhonebookForm = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  console.log('isLoading', isLoading);\n  console.log('error', error);\n\n  console.log('!contacts', !contacts);\n\n  console.log('filter', filter);\n\n  return (\n    <PhonebookContainer>\n      <PhoneBook>Phonebook</PhoneBook>\n      <Container>\n        {' '}\n        <ContactForm />\n        <div>\n          {' '}\n          <Filter />\n          <ContactsTitle>Contacts</ContactsTitle>\n          {contacts.length > 0 && <ContactList />}\n          {contacts.length === 0 && !isLoading && !error && (\n            <EmptyPhonebook>\n              There are no saved contacts in your phonebook\n            </EmptyPhonebook>\n          )}\n        </div>\n      </Container>\n    </PhonebookContainer>\n  );\n};\n\nexport default PhonebookForm;\n"],"names":["Form","styled","Label","Input","ButtonAdd","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","createSelector","normalizeFilter","trim","toLowerCase","contact","name","includes","useState","setName","number","setNumber","useSelector","handleChange","e","target","value","Error","dispatch","useDispatch","onSubmit","event","preventDefault","isNameAdded","some","isNumberAdded","Notiflix","newContact","addContact","type","pattern","title","required","onChange","FilterLabel","FilterInput","filterByName","PhonebookContainer","PhoneBook","ContactsTitle","EmptyPhonebook","Container","ContactContainer","ListItem","Contact","ButtonDelete","id","onClick","deleteContact","visibleContacts","map","PhonebookForm","useEffect","fetchContacts","console","log","length"],"sourceRoot":""}